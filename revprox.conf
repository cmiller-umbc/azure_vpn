# Create log format "main" used in access.log
log_format main '$remote_addr - $remote_user [$time_local] '
                '"$request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent" '
                '"$http_accept_encoding" "$http_accept_language" '
                '"$http_connection" "$http_host" "$http_origin" '
                '"$http_sec_fetch_dest" "$http_sec_fetch_mode" '
                '"$http_sec_fetch_site" "$http_sec_fetch_user" '
                '"$http_upgrade" "$http_via" "$http_x_forwarded_for" '
                '"$http_x_forwarded_proto" "$http_x_requested_with"';

# Map HTTP Forwarded header to a variable we can assign to $backend_url
map $http_forwarded $backend_url {
    default "";
    "~*for=([^;]+);" $1;
}

# Configures a reverse proxy server that passes the $backend_url variable containing HTTP Forwarded header info as the backend server address
server {
    listen 80;
    listen 443 ssl;
	access_log /var/log/nginx/logs/access.log main;
	error_log /var/log/nginx/logs/error.log;

    # SSL/TLS configuration
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    #Serve a front page to confirm web server is running
    root /usr/share/nginx/html;
    index index.html;

    #Create variables for storing backend url and contents of the HTTP Forwarded header
    set $backend_url "";
    set $forwarded_header $http_forwarded;

    
    #URI wildcard handles all requests
    location / {
        #DNS resolving to CloudFlare public DNS
        resolver 1.1.1.1;

        #using javascript to log all incoming headers (including any non-standard or custom)
        js_header_filter headers_json_log.headers_json_log;
        return 200;

        #Return an error message if there is no HTTP Forwarded header
        if ($backend_url = '') {
            #error_page 400 /400.html;
            #return 400;
        }

        #Passes the Forwarded header for contents to the reverse proxy as the new destination
        proxy_pass $backend_url;
    }
    
    # Configures the error page
    error_page 400 /400.html;
}






# Don't delete yet




        #If the Forwarded header exists and it contains 'for=ANYSTRING;' then ANYSTRING is extracted as the $1 variable and placed into backend_url
        #if ($forwarded_header) {
            #if ($forwarded_header ~* "for=([^;]+);") {
                #set $backend_url $1;
            #}
        #}